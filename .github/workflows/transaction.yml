on:
  pull_request:
    branches:
      - master
      

name: Transaction Workflow

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: "clouddigitalbank"
        BANK_ACCOUNT_IMAGE_TAG: "bank-account-image"
        TRANSACTION_IMAGE_TAG: "transaction-image"
        TRANSFERCOMPLEX_IMAGE_TAG: "transfercomplex-image"
        EXTERNALBANK_IMAGE_TAG: "externalbankcomplex-image"

      run: |
        cd backend/transactions
        # Build a docker container and push it to ECR 
        docker build -t $TRANSACTION_IMAGE_TAG:$TRANSACTION_IMAGE_TAG -f transactions.DockerFile .
        docker tag $TRANSACTION_IMAGE_TAG:$TRANSACTION_IMAGE_TAG 252674446317.dkr.ecr.ap-southeast-1.amazonaws.com/$ECR_REPOSITORY:$TRANSACTION_IMAGE_TAG      
        echo "Pushing transaction image to ECR..."
        docker push 252674446317.dkr.ecr.ap-southeast-1.amazonaws.com/$ECR_REPOSITORY:$TRANSACTION_IMAGE_TAG     
        echo "::set-output name=transaction-image::$ECR_REGISTRY/$ECR_REPOSITORY:$TRANSACTION_IMAGE_TAG"
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
#       test2
        task-definition: ./transaction-task-definition.json
        container-name: ecs-transactions-container
        image: ${{ steps.build-image.outputs.transaction-image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ecs-transactions-service
        cluster: cloud-project-prototype-1
        wait-for-service-stability: true
